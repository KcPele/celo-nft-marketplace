{
  "address": "0xfA765FDbe4f6F960A017dB1fC61DF5c3D1De4f50",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ListingCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ListingCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "ListingPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ListingUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchaseListing",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4fcfbe4f0b9a961622a3dd35c594e16661663759ba203624bdae3de2490d3a0c",
  "receipt": {
    "to": null,
    "from": "0x2fae2a3aC4e8770b8641659f0669cFe8bfd60eA3",
    "contractAddress": "0xfA765FDbe4f6F960A017dB1fC61DF5c3D1De4f50",
    "transactionIndex": 5,
    "gasUsed": "611737",
    "logsBloom": "0x
    "blockHash": "0x32c48b72321df4236882275f9d078642f0f425c169e4f079e32d7ca60a59b5d1",
    "transactionHash": "0x4fcfbe4f0b9a961622a3dd35c594e16661663759ba203624bdae3de2490d3a0c",
    "logs": [],
    "blockNumber": 12589062,
    "cumulativeGasUsed": "1176511",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "39a1312a82994386db50e8d2646d80bd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ListingCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ListingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ListingPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ListingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseListing\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":110},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NFTMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract NFTMarketplace {\\n    struct Listing {\\n        uint256 price;\\n        address seller;\\n    }\\n\\n    mapping(address => mapping(uint256 => Listing)) public listings;\\n\\n    modifier isNFTOwner(address nftAddress, uint256 tokenId) {\\n        require(\\n            IERC721(nftAddress).ownerOf(tokenId) == msg.sender,\\n            \\\"MRKT: Not the owner\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isNotListed(address nftAddress, uint256 tokenId) {\\n        require(\\n            listings[nftAddress][tokenId].price == 0,\\n            \\\"MRKT: Already listed\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isListed(address nftAddress, uint256 tokenId) {\\n        require(listings[nftAddress][tokenId].price > 0, \\\"MRKT: Not listed\\\");\\n        _;\\n    }\\n\\n    event ListingCreated(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price,\\n        address seller\\n    );\\n\\n    event ListingCanceled(address nftAddress, uint256 tokenId, address seller);\\n\\n    event ListingUpdated(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice,\\n        address seller\\n    );\\n\\n    event ListingPurchased(\\n        address nftAddress,\\n        uint256 tokenId,\\n        address seller,\\n        address buyer\\n    );\\n\\n    function createListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price\\n    )\\n        external\\n        isNotListed(nftAddress, tokenId)\\n        isNFTOwner(nftAddress, tokenId)\\n    {\\n        require(price > 0, \\\"MRKT: Price must be > 0\\\");\\n        IERC721 nftContract = IERC721(nftAddress);\\n        require(\\n            nftContract.getApproved(tokenId) == address(this),\\n            \\\"MRKT: No approval for NFT\\\"\\n        );\\n        listings[nftAddress][tokenId] = Listing({\\n            price: price,\\n            seller: msg.sender\\n        });\\n\\n        emit ListingCreated(nftAddress, tokenId, price, msg.sender);\\n    }\\n\\n    function cancelListing(address nftAddress, uint256 tokenId)\\n        external\\n        isListed(nftAddress, tokenId)\\n        isNFTOwner(nftAddress, tokenId)\\n    {\\n        delete listings[nftAddress][tokenId];\\n        emit ListingCanceled(nftAddress, tokenId, msg.sender);\\n    }\\n\\n    function updateListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice\\n    ) external isListed(nftAddress, tokenId) isNFTOwner(nftAddress, tokenId) {\\n        require(newPrice > 0, \\\"MRKT: Price must be > 0\\\");\\n        listings[nftAddress][tokenId].price = newPrice;\\n        emit ListingUpdated(nftAddress, tokenId, newPrice, msg.sender);\\n    }\\n\\n    function purchaseListing(address nftAddress, uint256 tokenId)\\n        external\\n        payable\\n        isListed(nftAddress, tokenId)\\n    {\\n        Listing memory listing = listings[nftAddress][tokenId];\\n        require(msg.value == listing.price, \\\"MRKT: Incorrect ETH supplied\\\");\\n\\n        delete listings[nftAddress][tokenId];\\n\\n        IERC721(nftAddress).safeTransferFrom(\\n            listing.seller,\\n            msg.sender,\\n            tokenId\\n        );\\n        payable(listing.seller).transfer(msg.value);\\n\\n        emit ListingPurchased(nftAddress, tokenId, listing.seller, msg.sender);\\n    }\\n}\",\"keccak256\":\"0x473d342111d0ed0861754946f13044c973e8be68297839066739b7f426ec72e7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a1a806100206000396000f3fe6080604052600436106100495760003560e01c806207df301461004e57806324780c56146100b4578063a7fc91b9146100d6578063b2ddee06146100e9578063f772adf114610109575b600080fd5b34801561005a57600080fd5b506100936100693660046108b8565b6000602081815292815260408082209093529081522080546001909101546001600160a01b031682565b604080519283526001600160a01b0390911660208301520160405180910390f35b3480156100c057600080fd5b506100d46100cf3660046108e4565b610129565b005b6100d46100e43660046108b8565b6103c6565b3480156100f557600080fd5b506100d46101043660046108b8565b6105c4565b34801561011557600080fd5b506100d46101243660046108e4565b610723565b6001600160a01b03831660009081526020818152604080832085845290915290205483908390156101985760405162461bcd60e51b8152602060048201526014602482015273135492d50e88105b1c9958591e481b1a5cdd195960621b60448201526064015b60405180910390fd5b6040516331a9108f60e11b8152600481018590528590859033906001600160a01b03841690636352211e9060240160206040518083038186803b1580156101de57600080fd5b505afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610894565b6001600160a01b03161461023c5760405162461bcd60e51b815260040161018f9061099f565b6000851161025c5760405162461bcd60e51b815260040161018f9061096e565b60405163020604bf60e21b815260048101879052879030906001600160a01b0383169063081812fc9060240160206040518083038186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610894565b6001600160a01b03161461032a5760405162461bcd60e51b8152602060048201526019602482015278135492d50e88139bc8185c1c1c9bdd985b08199bdc88139195603a1b604482015260640161018f565b6040805180820182528781523360208083018281526001600160a01b038d811660009081528084528681208e8252909352918590209351845551600190930180546001600160a01b031916939091169290921790915590517fdc801191e0c92935648f61c8e3d0cd8eac1d060269ddb920487d02ab0be69e7d916103b4918b918b918b9190610919565b60405180910390a15050505050505050565b6001600160a01b038216600090815260208181526040808320848452909152902054829082906104085760405162461bcd60e51b815260040161018f90610944565b6001600160a01b0380851660009081526020818152604080832087845282529182902082518084019093528054808452600190910154909316908201529034146104945760405162461bcd60e51b815260206004820152601c60248201527f4d524b543a20496e636f72726563742045544820737570706c69656400000000604482015260640161018f565b6001600160a01b038581166000818152602081815260408083208984528252808320928355600190920180546001600160a01b03191690558401519051632142170760e11b81529216600483015233602483015260448201869052906342842e0e90606401600060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b50505060208201516040516001600160a01b0390911691503480156108fc02916000818181858888f19350505050158015610566573d6000803e3d6000fd5b50602081810151604080516001600160a01b0389811682529381018890529290911682820152336060830152517fab7369fca6913c40e2bf7144b586a1a0e894bd32f5f9e74128cd89fb54f7bf949181900360800190a15050505050565b6001600160a01b038216600090815260208181526040808320848452909152902054829082906106065760405162461bcd60e51b815260040161018f90610944565b6040516331a9108f60e11b8152600481018490528490849033906001600160a01b03841690636352211e9060240160206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610894565b6001600160a01b0316146106aa5760405162461bcd60e51b815260040161018f9061099f565b6001600160a01b0386166000818152602081815260408083208984528252808320928355600190920180546001600160a01b0319169055815192835282018790523382820152517fcf45896873f759e6a8c2348e49ff9892b89458850ab6c70339e1c430227ce91d9181900360600190a1505050505050565b6001600160a01b038316600090815260208181526040808320858452909152902054839083906107655760405162461bcd60e51b815260040161018f90610944565b6040516331a9108f60e11b8152600481018590528590859033906001600160a01b03841690636352211e9060240160206040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190610894565b6001600160a01b0316146108095760405162461bcd60e51b815260040161018f9061099f565b600085116108295760405162461bcd60e51b815260040161018f9061096e565b6001600160a01b03871660009081526020818152604080832089845290915290819020869055517f3199bfdff711ec1ab8ab8449dc3b8d3fa30a59861a734a9d26f7b1a38162df7590610883908990899089903390610919565b60405180910390a150505050505050565b6000602082840312156108a657600080fd5b81516108b1816109cc565b9392505050565b600080604083850312156108cb57600080fd5b82356108d6816109cc565b946020939093013593505050565b6000806000606084860312156108f957600080fd5b8335610904816109cc565b95602085013595506040909401359392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b60208082526010908201526f135492d50e88139bdd081b1a5cdd195960821b604082015260600190565b60208082526017908201527604d524b543a205072696365206d757374206265203e203604c1b604082015260600190565b60208082526013908201527226a925aa1d102737ba103a34329037bbb732b960691b604082015260600190565b6001600160a01b03811681146109e157600080fd5b5056fea26469706673582212200516e98b1894ef447ec66f5fc07bb2593d0092c8421e6f0986156c19f60c9f5c64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100495760003560e01c806207df301461004e57806324780c56146100b4578063a7fc91b9146100d6578063b2ddee06146100e9578063f772adf114610109575b600080fd5b34801561005a57600080fd5b506100936100693660046108b8565b6000602081815292815260408082209093529081522080546001909101546001600160a01b031682565b604080519283526001600160a01b0390911660208301520160405180910390f35b3480156100c057600080fd5b506100d46100cf3660046108e4565b610129565b005b6100d46100e43660046108b8565b6103c6565b3480156100f557600080fd5b506100d46101043660046108b8565b6105c4565b34801561011557600080fd5b506100d46101243660046108e4565b610723565b6001600160a01b03831660009081526020818152604080832085845290915290205483908390156101985760405162461bcd60e51b8152602060048201526014602482015273135492d50e88105b1c9958591e481b1a5cdd195960621b60448201526064015b60405180910390fd5b6040516331a9108f60e11b8152600481018590528590859033906001600160a01b03841690636352211e9060240160206040518083038186803b1580156101de57600080fd5b505afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610894565b6001600160a01b03161461023c5760405162461bcd60e51b815260040161018f9061099f565b6000851161025c5760405162461bcd60e51b815260040161018f9061096e565b60405163020604bf60e21b815260048101879052879030906001600160a01b0383169063081812fc9060240160206040518083038186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610894565b6001600160a01b03161461032a5760405162461bcd60e51b8152602060048201526019602482015278135492d50e88139bc8185c1c1c9bdd985b08199bdc88139195603a1b604482015260640161018f565b6040805180820182528781523360208083018281526001600160a01b038d811660009081528084528681208e8252909352918590209351845551600190930180546001600160a01b031916939091169290921790915590517fdc801191e0c92935648f61c8e3d0cd8eac1d060269ddb920487d02ab0be69e7d916103b4918b918b918b9190610919565b60405180910390a15050505050505050565b6001600160a01b038216600090815260208181526040808320848452909152902054829082906104085760405162461bcd60e51b815260040161018f90610944565b6001600160a01b0380851660009081526020818152604080832087845282529182902082518084019093528054808452600190910154909316908201529034146104945760405162461bcd60e51b815260206004820152601c60248201527f4d524b543a20496e636f72726563742045544820737570706c69656400000000604482015260640161018f565b6001600160a01b038581166000818152602081815260408083208984528252808320928355600190920180546001600160a01b03191690558401519051632142170760e11b81529216600483015233602483015260448201869052906342842e0e90606401600060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b50505060208201516040516001600160a01b0390911691503480156108fc02916000818181858888f19350505050158015610566573d6000803e3d6000fd5b50602081810151604080516001600160a01b0389811682529381018890529290911682820152336060830152517fab7369fca6913c40e2bf7144b586a1a0e894bd32f5f9e74128cd89fb54f7bf949181900360800190a15050505050565b6001600160a01b038216600090815260208181526040808320848452909152902054829082906106065760405162461bcd60e51b815260040161018f90610944565b6040516331a9108f60e11b8152600481018490528490849033906001600160a01b03841690636352211e9060240160206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610894565b6001600160a01b0316146106aa5760405162461bcd60e51b815260040161018f9061099f565b6001600160a01b0386166000818152602081815260408083208984528252808320928355600190920180546001600160a01b0319169055815192835282018790523382820152517fcf45896873f759e6a8c2348e49ff9892b89458850ab6c70339e1c430227ce91d9181900360600190a1505050505050565b6001600160a01b038316600090815260208181526040808320858452909152902054839083906107655760405162461bcd60e51b815260040161018f90610944565b6040516331a9108f60e11b8152600481018590528590859033906001600160a01b03841690636352211e9060240160206040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e39190610894565b6001600160a01b0316146108095760405162461bcd60e51b815260040161018f9061099f565b600085116108295760405162461bcd60e51b815260040161018f9061096e565b6001600160a01b03871660009081526020818152604080832089845290915290819020869055517f3199bfdff711ec1ab8ab8449dc3b8d3fa30a59861a734a9d26f7b1a38162df7590610883908990899089903390610919565b60405180910390a150505050505050565b6000602082840312156108a657600080fd5b81516108b1816109cc565b9392505050565b600080604083850312156108cb57600080fd5b82356108d6816109cc565b946020939093013593505050565b6000806000606084860312156108f957600080fd5b8335610904816109cc565b95602085013595506040909401359392505050565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b60208082526010908201526f135492d50e88139bdd081b1a5cdd195960821b604082015260600190565b60208082526017908201527604d524b543a205072696365206d757374206265203e203604c1b604082015260600190565b60208082526013908201527226a925aa1d102737ba103a34329037bbb732b960691b604082015260600190565b6001600160a01b03811681146109e157600080fd5b5056fea26469706673582212200516e98b1894ef447ec66f5fc07bb2593d0092c8421e6f0986156c19f60c9f5c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1664,
        "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
        "label": "listings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1657_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1657_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTMarketplace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)1657_storage)"
      },
      "t_mapping(t_uint256,t_struct(Listing)1657_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)1657_storage"
      },
      "t_struct(Listing)1657_storage": {
        "encoding": "inplace",
        "label": "struct NFTMarketplace.Listing",
        "members": [
          {
            "astId": 1654,
            "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1656,
            "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}